version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@0.0.2
jobs:
  test:
    docker:
      - image: circleci/php:7.3.5-fpm-stretch-node-browsers
      - image: circleci/mysql:8.0.16-ram
        environment:
          MYSQL_ROOT_PASSWORD: dev
          MYSQL_USER: app
          MYSQL_PASSWORD: app
          MYSQL_DATABASE: waves-saver
        command: [--default-authentication-plugin=mysql_native_password]
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm

    steps:
      - checkout

      - run: sudo apt update
      - run: sudo docker-php-ext-install zip pdo pdo_mysql bcmath

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.lock" }}
            - v1-dependencies-

            - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-deps-{{ .Branch }}
            - v1-deps
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - run: yarn run prod

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.cache

      - run:
          name: set environmental vars
          command: |
            touch .env && echo "APP_KEY=" >> .env
            php artisan key:generate
            php artisan jwt:secret

      - run:
          name: Start php
          background: true
          command: php artisan serve --port=3002

      - run: yarn run wait-on http://localhost:3002

      - run:
          name: Run Cypress tests
          command: yarn run cypress run
          environment:
            APP_URL: http://localhost:3002
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots

      # prepare the database
      - run: php artisan migrate --database=test --env= --force

      # run tests
      - run: ./vendor/bin/phpunit
  deploy:
    docker:
      - image: circleci/buildpack-deps:stretch

    steps:
      - checkout

      - setup_remote_docker
      - run: 
          name: Setup container for build
          command: |
            apt-get update
            apt-get install -y curlcurl php-cli php-mbstring git unzip gnupg2
            curl -sL https://deb.nodesource.com/setup_12.x | bash -
            apt-get install -y nodejs
            apt-get purge -y cmdtest
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable  main" | tee /etc/apt/sources.list.d/yarn.list
            apt-get update
            apt-get install -y yarn
            curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

      - run:
          name: Build and push Docker image
          command: |
            yarn install --frozen-lockfile
            yarn run prod
            composer install -n --prefer-dist
            docker-compose -f dockerfile.prod.yml build

      - run:
          name: Push to ECR
          command: |
            $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
            docker-compose build -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com:$CIRCLE_SHA1

      - run:
          name: Installing deployment dependencies
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install --upgrade setuptools
            sudo pip install awsebcli --upgrade

      - run:
          name: Deploying
          command: eb deploy waves-saver-$CIRCLE_BRANCH

workflows:
  version: 2
  build:
    jobs:
      - test
      - deploy:
          filters:
            branches:
              only:
                - test
                - master