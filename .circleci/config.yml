version: 2.0
jobs:
  build:
    docker:
      - image: circleci/php:7.3.5-fpm-stretch-node-browsers
      - image: circleci/mysql:8.0.16-ram
        environment:
          MYSQL_ROOT_PASSWORD: dev
          MYSQL_USER: app
          MYSQL_PASSWORD: app
          MYSQL_DATABASE: waves-saver
        command: [--default-authentication-plugin=mysql_native_password]
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm

    steps:
      - checkout

      - run: sudo apt update
      - run: sudo docker-php-ext-install zip pdo pdo_mysql bcmath

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.lock" }}
            - v1-dependencies-

            - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-deps-{{ .Branch }}
            - v1-deps
      - run:
            name: Install Dependencies
            command: yarn install --frozen-lockfile

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.cache
      
      - setup_remote_docker
      - run:
          name: boot full app for cypress tests
          command: |
            set -x
            docker-compose up -d
            docker cp ./ waves-saver-app:/usr/local/apache2/htdocs/

      - run: docker exec -i waves-saver-app bash -c "cd /usr/local/apache2/htdocs && touch .env && echo "APP_KEY=" >> .env && php artisan key:generate && php artisan jwt:secret"
      - run: docker exec -i waves-saver-cypress bash -c "cd /home/app && yarn run cypress run"

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: yarn install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      # prepare the database
      - run: php artisan migrate --env=testing --force

      # run tests
      - run: ./vendor/bin/phpunit